# .properties equivalent for
# server.servlet.context-path=/gallery
# spring.datasource.url=jdbc:derby:gallery_db;create=true;collation=TERRITORY_BASED:PRIMARY
# spring.jpa.database-platform=org.hibernate.dialect.DerbyTenSevenDialect
# spring.jpa.hibernate.ddl-auto=update
#
# #spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
# #spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# #spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=ddl.sql
spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 15MB
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://accounts.google.com
          client-id: 753488737215-ddhopc29cuc7om24u51edb80o4ultjds.apps.googleusercontent.com
  datasource:
    url: jdbc:derby:gallery_db;create=true;collation=TERRITORY_BASED:PRIMARY
  jpa:
    database-platform: org.hibernate.dialect.DerbyTenSevenDialect
    hibernate:
      ddl-auto: update
#    properties:
#      javax:
#        persistence:
#          schema-generation:
#            create-source: metadata
#            scripts:
#              action: create
#              create-target: ddl.sql
server:
  port: 18181
  servlet:
    context-path: /gallery

upload:
  application-home: true
  directory: uploads
  subdirectory-pattern: "^(.{4})(.{2})(.{2}).*$"
  whitelist:
    - image/bmp
    - image/gif
    - image/jpeg
    - image/pjpeg
    - image/png
    - image/tiff
  filename:
    format: "%1$s-%2$d.%3$s"
    randomizer-limit: 1000000
    timestamp:
      format: yyyyMMddHHmmssSSS
      time-zone: UTC